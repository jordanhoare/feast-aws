name: Server CI/CD

permissions:
  id-token: write
  contents: read

on:
  push:
    branches: [ master ]
    paths:
      - 'server/**'
      - 'repository/**'



jobs:
  # tests-and-linting:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Set up Python 3.10
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.10"

  #     - name: Install Poetry
  #       run: |
  #         curl -sSL https://install.python-poetry.org | python3 -
  #         echo "$HOME/.poetry/bin" >> $GITHUB_PATH

  #     - name: Configure Poetry
  #       run: |
  #         poetry config virtualenvs.create false

  #     - name: Install dependencies
  #       run: poetry install --no-root

  #     - name: Run tests
  #       run: poetry run pytest

  #     - name: Run linter
  #       run: poetry run flake8 server/ repository/ tests/


  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::432702836969:role/github_actions_role
          aws-region: ap-southeast-2
          audience: sts.amazonaws.com

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag & push image to Amazon ECR
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./server/Dockerfile
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/feast-repo:latest
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: feast-repo
          IMAGE_TAG: latest
