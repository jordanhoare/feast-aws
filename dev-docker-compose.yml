version: '3.8'

services:

  backend:
    container_name: server
    build:
      context: .
      dockerfile: server/Dockerfile
    image: backend
    ports:
      - "8000:8000"
    env_file:
      - ./.env # Temporary
    volumes:
        - ./server:/app/server
        - ./repository:/app/repository

  frontend:
    container_name: ui
    build:
      context: .
      dockerfile: ui/Dockerfile
    image: frontend
    ports:
      - "3000:80"
    depends_on:
      - backend


  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000


  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1


  tx_kafka_events:
    build:
      context: .
      dockerfile: kafka_demo/Dockerfile
    depends_on:
      - broker
    container_name: tx_kafka_events


  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"


  # registry:
  #   container_name: registry
  #   image: postgres:10.5
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=mysecretpassword
  #     - POSTGRES_DB=feast
  #   ports:
  #     - "55001:5432"
  #   volumes: 
  #     - ./feast-postgres-data:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD", "pg_isready", "-U", "postgres"]
  #     interval: 5s
  #     retries: 5